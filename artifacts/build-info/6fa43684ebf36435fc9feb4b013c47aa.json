{
	"id": "6fa43684ebf36435fc9feb4b013c47aa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"token_swap.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol\";\r\n\r\n\r\n\r\ncontract TokenSwap {\r\n    IERC20 public token1;\r\n    address public onwer1;\r\n    \r\n}\r\n\r\n\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"token_swap.sol": {
				"TokenSwap": {
					"abi": [
						{
							"inputs": [],
							"name": "onwer1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"token_swap.sol\":183:267  contract TokenSwap {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"token_swap.sol\":183:267  contract TokenSwap {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa9e9f461\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"token_swap.sol\":236:257  address public onwer1 */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token_swap.sol\":209:229  IERC20 public token1 */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token_swap.sol\":236:257  address public onwer1 */\n    tag_6:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"token_swap.sol\":209:229  IERC20 public token1 */\n    tag_10:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_14:\n        /* \"#utility.yul\":94:118   */\n      tag_16\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:288   */\n    tag_18:\n        /* \"#utility.yul\":231:281   */\n      tag_20\n        /* \"#utility.yul\":275:280   */\n      dup2\n        /* \"#utility.yul\":231:281   */\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":226:229   */\n      dup3\n        /* \"#utility.yul\":219:282   */\n      mstore\n        /* \"#utility.yul\":131:288   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":294:516   */\n    tag_8:\n        /* \"#utility.yul\":387:391   */\n      0x00\n        /* \"#utility.yul\":425:427   */\n      0x20\n        /* \"#utility.yul\":414:423   */\n      dup3\n        /* \"#utility.yul\":410:428   */\n      add\n        /* \"#utility.yul\":402:428   */\n      swap1\n      pop\n        /* \"#utility.yul\":438:509   */\n      tag_23\n        /* \"#utility.yul\":506:507   */\n      0x00\n        /* \"#utility.yul\":495:504   */\n      dup4\n        /* \"#utility.yul\":491:508   */\n      add\n        /* \"#utility.yul\":482:488   */\n      dup5\n        /* \"#utility.yul\":438:509   */\n      tag_14\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":294:516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":522:770   */\n    tag_12:\n        /* \"#utility.yul\":628:632   */\n      0x00\n        /* \"#utility.yul\":666:668   */\n      0x20\n        /* \"#utility.yul\":655:664   */\n      dup3\n        /* \"#utility.yul\":651:669   */\n      add\n        /* \"#utility.yul\":643:669   */\n      swap1\n      pop\n        /* \"#utility.yul\":679:763   */\n      tag_25\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":749:758   */\n      dup4\n        /* \"#utility.yul\":745:762   */\n      add\n        /* \"#utility.yul\":736:742   */\n      dup5\n        /* \"#utility.yul\":679:763   */\n      tag_18\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":522:770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":776:872   */\n    tag_17:\n        /* \"#utility.yul\":813:820   */\n      0x00\n        /* \"#utility.yul\":842:866   */\n      tag_27\n        /* \"#utility.yul\":860:865   */\n      dup3\n        /* \"#utility.yul\":842:866   */\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":831:866   */\n      swap1\n      pop\n        /* \"#utility.yul\":776:872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":878:1004   */\n    tag_28:\n        /* \"#utility.yul\":915:922   */\n      0x00\n        /* \"#utility.yul\":955:997   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":948:953   */\n      dup3\n        /* \"#utility.yul\":944:998   */\n      and\n        /* \"#utility.yul\":933:998   */\n      swap1\n      pop\n        /* \"#utility.yul\":878:1004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1010:1149   */\n    tag_21:\n        /* \"#utility.yul\":1073:1082   */\n      0x00\n        /* \"#utility.yul\":1106:1143   */\n      tag_31\n        /* \"#utility.yul\":1137:1142   */\n      dup3\n        /* \"#utility.yul\":1106:1143   */\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":1093:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1010:1149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1155:1281   */\n    tag_32:\n        /* \"#utility.yul\":1205:1214   */\n      0x00\n        /* \"#utility.yul\":1238:1275   */\n      tag_34\n        /* \"#utility.yul\":1269:1274   */\n      dup3\n        /* \"#utility.yul\":1238:1275   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":1225:1275   */\n      swap1\n      pop\n        /* \"#utility.yul\":1155:1281   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1287:1400   */\n    tag_35:\n        /* \"#utility.yul\":1337:1346   */\n      0x00\n        /* \"#utility.yul\":1370:1394   */\n      tag_37\n        /* \"#utility.yul\":1388:1393   */\n      dup3\n        /* \"#utility.yul\":1370:1394   */\n      tag_28\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1357:1394   */\n      swap1\n      pop\n        /* \"#utility.yul\":1287:1400   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122053de64a9850134a1befe826715488231b9cba5ff418308b1ea23e23e4606d5f464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506101b3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a9e9f4611461003b578063d21220a714610059575b600080fd5b610043610077565b60405161005091906100df565b60405180910390f35b61006161009d565b60405161006e91906100fa565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100ca81610115565b82525050565b6100d981610147565b82525050565b60006020820190506100f460008301846100c1565b92915050565b600060208201905061010f60008301846100d0565b92915050565b600061012082610127565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015282610159565b9050919050565b60006101648261016b565b9050919050565b600061017682610127565b905091905056fea264697066735822122053de64a9850134a1befe826715488231b9cba5ff418308b1ea23e23e4606d5f464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9E9F461 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xCA DUP2 PUSH2 0x115 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD9 DUP2 PUSH2 0x147 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 PUSH2 0x127 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152 DUP3 PUSH2 0x159 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x164 DUP3 PUSH2 0x16B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176 DUP3 PUSH2 0x127 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xDE PUSH5 0xA9850134A1 0xBE INVALID DUP3 PUSH8 0x15488231B9CBA5FF COINBASE DUP4 ADDMOD 0xB1 0xEA 0x23 0xE2 RETURNDATACOPY CHAINID MOD 0xD5 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "183:84:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onwer1_85": {
									"entryPoint": 119,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_83": {
									"entryPoint": 157,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1403:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:2",
														"type": ""
													}
												],
												"src": "7:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "209:79:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "226:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "275:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "231:43:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "231:50:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "219:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "219:63:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "219:63:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "197:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "204:3:2",
														"type": ""
													}
												],
												"src": "131:157:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "392:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "402:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "414:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "425:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "410:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "410:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "402:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "482:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "495:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "506:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "491:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "491:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "438:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "438:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "364:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "376:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "387:4:2",
														"type": ""
													}
												],
												"src": "294:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "633:137:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "643:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "655:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "666:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "651:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "651:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "643:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "736:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "749:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "760:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "745:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "745:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "679:56:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "679:84:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "679:84:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "605:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "617:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "628:4:2",
														"type": ""
													}
												],
												"src": "522:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "821:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "831:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "860:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "842:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "842:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "831:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "803:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "813:7:2",
														"type": ""
													}
												],
												"src": "776:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "923:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "933:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "948:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "955:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "944:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "933:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "905:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "915:7:2",
														"type": ""
													}
												],
												"src": "878:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1083:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1093:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1137:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1106:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1106:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1093:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1063:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1073:9:2",
														"type": ""
													}
												],
												"src": "1010:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1215:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1225:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1269:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1238:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1225:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1195:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1205:9:2",
														"type": ""
													}
												],
												"src": "1155:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1347:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1357:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1388:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1370:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1357:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1327:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1337:9:2",
														"type": ""
													}
												],
												"src": "1287:113:2"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063a9e9f4611461003b578063d21220a714610059575b600080fd5b610043610077565b60405161005091906100df565b60405180910390f35b61006161009d565b60405161006e91906100fa565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100ca81610115565b82525050565b6100d981610147565b82525050565b60006020820190506100f460008301846100c1565b92915050565b600060208201905061010f60008301846100d0565b92915050565b600061012082610127565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061015282610159565b9050919050565b60006101648261016b565b9050919050565b600061017682610127565b905091905056fea264697066735822122053de64a9850134a1befe826715488231b9cba5ff418308b1ea23e23e4606d5f464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA9E9F461 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xCA DUP2 PUSH2 0x115 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD9 DUP2 PUSH2 0x147 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 PUSH2 0x127 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x152 DUP3 PUSH2 0x159 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x164 DUP3 PUSH2 0x16B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176 DUP3 PUSH2 0x127 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 0xDE PUSH5 0xA9850134A1 0xBE INVALID DUP3 PUSH8 0x15488231B9CBA5FF COINBASE DUP4 ADDMOD 0xB1 0xEA 0x23 0xE2 RETURNDATACOPY CHAINID MOD 0xD5 DELEGATECALL PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "183:84:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;236:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;209:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;236:21;;;;;;;;;;;;;:::o;209:20::-;;;;;;;;;;;;:::o;7:118:2:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:157::-;231:50;275:5;231:50;:::i;:::-;226:3;219:63;131:157;;:::o;294:222::-;387:4;425:2;414:9;410:18;402:26;;438:71;506:1;495:9;491:17;482:6;438:71;:::i;:::-;294:222;;;;:::o;522:248::-;628:4;666:2;655:9;651:18;643:26;;679:84;760:1;749:9;745:17;736:6;679:84;:::i;:::-;522:248;;;;:::o;776:96::-;813:7;842:24;860:5;842:24;:::i;:::-;831:35;;776:96;;;:::o;878:126::-;915:7;955:42;948:5;944:54;933:65;;878:126;;;:::o;1010:139::-;1073:9;1106:37;1137:5;1106:37;:::i;:::-;1093:50;;1010:139;;;:::o;1155:126::-;1205:9;1238:37;1269:5;1238:37;:::i;:::-;1225:50;;1155:126;;;:::o;1287:113::-;1337:9;1370:24;1388:5;1370:24;:::i;:::-;1357:37;;1287:113;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "87000",
								"executionCost": "135",
								"totalCost": "87135"
							},
							"external": {
								"onwer1()": "2492",
								"token1()": "2597"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 267,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 183,
									"end": 267,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 183,
									"end": 267,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 183,
									"end": 267,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 183,
									"end": 267,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 183,
									"end": 267,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 183,
									"end": 267,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 267,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 183,
									"end": 267,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 267,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 183,
									"end": 267,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 183,
									"end": 267,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 267,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 183,
									"end": 267,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 183,
									"end": 267,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 267,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 183,
									"end": 267,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 267,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 267,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 183,
									"end": 267,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 267,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122053de64a9850134a1befe826715488231b9cba5ff418308b1ea23e23e4606d5f464736f6c63430008070033",
									".code": [
										{
											"begin": 183,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 267,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 267,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 267,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 267,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 183,
											"end": 267,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "A9E9F461"
										},
										{
											"begin": 183,
											"end": 267,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 183,
											"end": 267,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "D21220A7"
										},
										{
											"begin": 183,
											"end": 267,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 267,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 267,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 231,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 275,
											"end": 280,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 231,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 226,
											"end": 229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 219,
											"end": 282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 131,
											"end": 288,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 294,
											"end": 516,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 294,
											"end": 516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 387,
											"end": 391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 427,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 423,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 410,
											"end": 428,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 402,
											"end": 428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 402,
											"end": 428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 438,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 506,
											"end": 507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 504,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 491,
											"end": 508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 482,
											"end": 488,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 438,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 438,
											"end": 509,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 438,
											"end": 509,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 438,
											"end": 509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 294,
											"end": 516,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 294,
											"end": 516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 294,
											"end": 516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 294,
											"end": 516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 294,
											"end": 516,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 522,
											"end": 770,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 522,
											"end": 770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 632,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 668,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 655,
											"end": 664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 651,
											"end": 669,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 643,
											"end": 669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 643,
											"end": 669,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 679,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 749,
											"end": 758,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 745,
											"end": 762,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 736,
											"end": 742,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 679,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 679,
											"end": 763,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 679,
											"end": 763,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 679,
											"end": 763,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 522,
											"end": 770,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 522,
											"end": 770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 522,
											"end": 770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 522,
											"end": 770,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 522,
											"end": 770,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 776,
											"end": 872,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 776,
											"end": 872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 813,
											"end": 820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 842,
											"end": 866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 842,
											"end": 866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 831,
											"end": 866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 831,
											"end": 866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 776,
											"end": 872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 776,
											"end": 872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 776,
											"end": 872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 776,
											"end": 872,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 878,
											"end": 1004,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 878,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 915,
											"end": 922,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 997,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 948,
											"end": 953,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 944,
											"end": 998,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 933,
											"end": 998,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 933,
											"end": 998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 878,
											"end": 1004,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 878,
											"end": 1004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 878,
											"end": 1004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 878,
											"end": 1004,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1010,
											"end": 1149,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1010,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1137,
											"end": 1142,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1106,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1093,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1149,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1149,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1149,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1149,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1155,
											"end": 1281,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1155,
											"end": 1281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1238,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1238,
											"end": 1275,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1238,
											"end": 1275,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1238,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1225,
											"end": 1275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1281,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1287,
											"end": 1400,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1287,
											"end": 1400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1337,
											"end": 1346,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1388,
											"end": 1393,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1370,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1370,
											"end": 1394,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1370,
											"end": 1394,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1370,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1357,
											"end": 1394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1357,
											"end": 1394,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1400,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1400,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onwer1()": "a9e9f461",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"onwer1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"token_swap.sol\":\"TokenSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"token_swap.sol\":{\"keccak256\":\"0xda48313fc044b9fb39f5e707127044af0d87b868e2086b50b7625583c63131b7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e2f9e2d1ee18222538462b55b642a8738c6daa60065a7e2bc61ae4e135ee34e9\",\"dweb:/ipfs/Qmc7QWFiYy4nCqxcssQBaiHfdp2ESnmXjyf2MFpg9iDxuS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "token_swap.sol:TokenSwap",
								"label": "token1",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 85,
								"contract": "token_swap.sol:TokenSwap",
								"label": "onwer1",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "139:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "269:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:0"
									},
									"scope": 77,
									"src": "223:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "380:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:0"
									},
									"scope": 77,
									"src": "361:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "667:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "686:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "720:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:0"
									},
									"scope": 77,
									"src": "649:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1020:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1035:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:0"
									},
									"scope": 77,
									"src": "1001:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1754:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1771:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1805:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:0"
									},
									"scope": 77,
									"src": "1737:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2148:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2140:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2164:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2156:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2183:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2175:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:51:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2209:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2209:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:6:0"
									},
									"scope": 77,
									"src": "2118:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2221:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2390:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2415:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2399:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2437:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2421:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2449:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2441:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:57:0"
									},
									"src": "2384:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2462:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "2621:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2646:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2630:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2669:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2653:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2686:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2678:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2629:63:0"
									},
									"src": "2615:78:0"
								}
							],
							"scope": 78,
							"src": "129:2566:0",
							"usedErrors": []
						}
					],
					"src": "33:2663:0"
				},
				"id": 0
			},
			"token_swap.sol": {
				"ast": {
					"absolutePath": "token_swap.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TokenSwap": [
							86
						]
					},
					"id": 87,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 87,
							"sourceUnit": 78,
							"src": "66:109:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 86,
							"linearizedBaseContracts": [
								86
							],
							"name": "TokenSwap",
							"nameLocation": "192:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 83,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "223:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "209:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "209:6:1"
										},
										"referencedDeclaration": 77,
										"src": "209:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a9e9f461",
									"id": 85,
									"mutability": "mutable",
									"name": "onwer1",
									"nameLocation": "251:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 86,
									"src": "236:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 84,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "236:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								}
							],
							"scope": 87,
							"src": "183:84:1",
							"usedErrors": []
						}
					],
					"src": "39:234:1"
				},
				"id": 1
			}
		}
	}
}