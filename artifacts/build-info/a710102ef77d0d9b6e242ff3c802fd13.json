{
	"id": "a710102ef77d0d9b6e242ff3c802fd13",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"token_swap.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol\";\r\n\r\n\r\n\r\ncontract TokenSwap {\r\n    IERC20 public token1;\r\n    address public onwer1;\r\n    uint public amount1;\r\n    IERC20 public token2;\r\n    address public owner2;\r\n    \r\n}\r\n\r\n\r\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"token_swap.sol": {
				"TokenSwap": {
					"abi": [
						{
							"inputs": [],
							"name": "amount1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onwer1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner2",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token2",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"token_swap.sol\":183:348  contract TokenSwap {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"token_swap.sol\":183:348  contract TokenSwap {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x25be124e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x52709725\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa9e9f461\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf400fde4\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"token_swap.sol\":290:310  IERC20 public token2 */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token_swap.sol\":317:338  address public owner2 */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token_swap.sol\":236:257  address public onwer1 */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token_swap.sol\":209:229  IERC20 public token1 */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token_swap.sol\":264:283  uint public amount1 */\n    tag_7:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token_swap.sol\":290:310  IERC20 public token2 */\n    tag_9:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"token_swap.sol\":317:338  address public owner2 */\n    tag_13:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"token_swap.sol\":236:257  address public onwer1 */\n    tag_17:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"token_swap.sol\":209:229  IERC20 public token1 */\n    tag_20:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"token_swap.sol\":264:283  uint public amount1 */\n    tag_23:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_27:\n        /* \"#utility.yul\":94:118   */\n      tag_29\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:288   */\n    tag_31:\n        /* \"#utility.yul\":231:281   */\n      tag_33\n        /* \"#utility.yul\":275:280   */\n      dup2\n        /* \"#utility.yul\":231:281   */\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":226:229   */\n      dup3\n        /* \"#utility.yul\":219:282   */\n      mstore\n        /* \"#utility.yul\":131:288   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":294:412   */\n    tag_35:\n        /* \"#utility.yul\":381:405   */\n      tag_37\n        /* \"#utility.yul\":399:404   */\n      dup2\n        /* \"#utility.yul\":381:405   */\n      tag_38\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":376:379   */\n      dup3\n        /* \"#utility.yul\":369:406   */\n      mstore\n        /* \"#utility.yul\":294:412   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":418:640   */\n    tag_15:\n        /* \"#utility.yul\":511:515   */\n      0x00\n        /* \"#utility.yul\":549:551   */\n      0x20\n        /* \"#utility.yul\":538:547   */\n      dup3\n        /* \"#utility.yul\":534:552   */\n      add\n        /* \"#utility.yul\":526:552   */\n      swap1\n      pop\n        /* \"#utility.yul\":562:633   */\n      tag_40\n        /* \"#utility.yul\":630:631   */\n      0x00\n        /* \"#utility.yul\":619:628   */\n      dup4\n        /* \"#utility.yul\":615:632   */\n      add\n        /* \"#utility.yul\":606:612   */\n      dup5\n        /* \"#utility.yul\":562:633   */\n      tag_27\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":418:640   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":646:894   */\n    tag_11:\n        /* \"#utility.yul\":752:756   */\n      0x00\n        /* \"#utility.yul\":790:792   */\n      0x20\n        /* \"#utility.yul\":779:788   */\n      dup3\n        /* \"#utility.yul\":775:793   */\n      add\n        /* \"#utility.yul\":767:793   */\n      swap1\n      pop\n        /* \"#utility.yul\":803:887   */\n      tag_42\n        /* \"#utility.yul\":884:885   */\n      0x00\n        /* \"#utility.yul\":873:882   */\n      dup4\n        /* \"#utility.yul\":869:886   */\n      add\n        /* \"#utility.yul\":860:866   */\n      dup5\n        /* \"#utility.yul\":803:887   */\n      tag_31\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":646:894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":900:1122   */\n    tag_25:\n        /* \"#utility.yul\":993:997   */\n      0x00\n        /* \"#utility.yul\":1031:1033   */\n      0x20\n        /* \"#utility.yul\":1020:1029   */\n      dup3\n        /* \"#utility.yul\":1016:1034   */\n      add\n        /* \"#utility.yul\":1008:1034   */\n      swap1\n      pop\n        /* \"#utility.yul\":1044:1115   */\n      tag_44\n        /* \"#utility.yul\":1112:1113   */\n      0x00\n        /* \"#utility.yul\":1101:1110   */\n      dup4\n        /* \"#utility.yul\":1097:1114   */\n      add\n        /* \"#utility.yul\":1088:1094   */\n      dup5\n        /* \"#utility.yul\":1044:1115   */\n      tag_35\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":900:1122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1128:1224   */\n    tag_30:\n        /* \"#utility.yul\":1165:1172   */\n      0x00\n        /* \"#utility.yul\":1194:1218   */\n      tag_46\n        /* \"#utility.yul\":1212:1217   */\n      dup3\n        /* \"#utility.yul\":1194:1218   */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1183:1218   */\n      swap1\n      pop\n        /* \"#utility.yul\":1128:1224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1230:1356   */\n    tag_47:\n        /* \"#utility.yul\":1267:1274   */\n      0x00\n        /* \"#utility.yul\":1307:1349   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1300:1305   */\n      dup3\n        /* \"#utility.yul\":1296:1350   */\n      and\n        /* \"#utility.yul\":1285:1350   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1362:1439   */\n    tag_38:\n        /* \"#utility.yul\":1399:1406   */\n      0x00\n        /* \"#utility.yul\":1428:1433   */\n      dup2\n        /* \"#utility.yul\":1417:1433   */\n      swap1\n      pop\n        /* \"#utility.yul\":1362:1439   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1445:1584   */\n    tag_34:\n        /* \"#utility.yul\":1508:1517   */\n      0x00\n        /* \"#utility.yul\":1541:1578   */\n      tag_51\n        /* \"#utility.yul\":1572:1577   */\n      dup3\n        /* \"#utility.yul\":1541:1578   */\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1528:1578   */\n      swap1\n      pop\n        /* \"#utility.yul\":1445:1584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1590:1716   */\n    tag_52:\n        /* \"#utility.yul\":1640:1649   */\n      0x00\n        /* \"#utility.yul\":1673:1710   */\n      tag_54\n        /* \"#utility.yul\":1704:1709   */\n      dup3\n        /* \"#utility.yul\":1673:1710   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1660:1710   */\n      swap1\n      pop\n        /* \"#utility.yul\":1590:1716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1722:1835   */\n    tag_55:\n        /* \"#utility.yul\":1772:1781   */\n      0x00\n        /* \"#utility.yul\":1805:1829   */\n      tag_57\n        /* \"#utility.yul\":1823:1828   */\n      dup3\n        /* \"#utility.yul\":1805:1829   */\n      tag_47\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1792:1829   */\n      swap1\n      pop\n        /* \"#utility.yul\":1722:1835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206f5674fa9b5b033414a54323cb3a5d3b80f2ff2889d46b67c7856895fc2b811a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102b4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806325be124e1461005c578063527097251461007a578063a9e9f46114610098578063d21220a7146100b6578063f400fde4146100d4575b600080fd5b6100646100f2565b60405161007191906101d6565b60405180910390f35b610082610118565b60405161008f91906101bb565b60405180910390f35b6100a061013e565b6040516100ad91906101bb565b60405180910390f35b6100be610164565b6040516100cb91906101d6565b60405180910390f35b6100dc610188565b6040516100e991906101f1565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6101978161020c565b82525050565b6101a681610248565b82525050565b6101b58161023e565b82525050565b60006020820190506101d0600083018461018e565b92915050565b60006020820190506101eb600083018461019d565b92915050565b600060208201905061020660008301846101ac565b92915050565b60006102178261021e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102538261025a565b9050919050565b60006102658261026c565b9050919050565b60006102778261021e565b905091905056fea26469706673582212206f5674fa9b5b033414a54323cb3a5d3b80f2ff2889d46b67c7856895fc2b811a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B4 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25BE124E EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x52709725 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xA9E9F461 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xF400FDE4 EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x197 DUP2 PUSH2 0x20C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A6 DUP2 PUSH2 0x248 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B5 DUP2 PUSH2 0x23E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x206 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217 DUP3 PUSH2 0x21E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x253 DUP3 PUSH2 0x25A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 DUP3 PUSH2 0x26C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x277 DUP3 PUSH2 0x21E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x5674FA9B5B033414A54323CB3A5D3B80 CALLCODE SELFDESTRUCT 0x28 DUP10 0xD4 PUSH12 0x67C7856895FC2B811A64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "183:165:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@amount1_87": {
									"entryPoint": 392,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onwer1_85": {
									"entryPoint": 318,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner2_92": {
									"entryPoint": 280,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_83": {
									"entryPoint": 356,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token2_90": {
									"entryPoint": 242,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$77_to_t_address": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1838:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:2",
														"type": ""
													}
												],
												"src": "7:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "209:79:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "226:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "275:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "231:43:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "231:50:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "219:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "219:63:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "219:63:2"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "197:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "204:3:2",
														"type": ""
													}
												],
												"src": "131:157:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "359:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "376:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "399:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "381:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "381:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "369:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "369:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "369:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "347:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "354:3:2",
														"type": ""
													}
												],
												"src": "294:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "516:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "526:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "538:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "549:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "534:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "526:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "606:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "619:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "630:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "615:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "615:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "562:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "488:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "500:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "511:4:2",
														"type": ""
													}
												],
												"src": "418:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "757:137:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "767:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "779:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "790:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "775:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "767:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "860:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "873:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "884:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "869:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "869:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "803:56:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "803:84:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "803:84:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "729:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "741:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "752:4:2",
														"type": ""
													}
												],
												"src": "646:248:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "998:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1008:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1020:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1031:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1016:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1016:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1008:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1088:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1101:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1112:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1097:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1097:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1044:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1044:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1044:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "970:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "982:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "993:4:2",
														"type": ""
													}
												],
												"src": "900:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1173:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1183:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1212:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1194:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1183:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1155:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1165:7:2",
														"type": ""
													}
												],
												"src": "1128:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1275:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1285:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1300:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1307:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1296:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1285:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1257:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1267:7:2",
														"type": ""
													}
												],
												"src": "1230:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1407:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1417:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1428:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1417:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1389:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1399:7:2",
														"type": ""
													}
												],
												"src": "1362:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1518:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1528:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1572:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1541:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1541:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1528:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1498:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1508:9:2",
														"type": ""
													}
												],
												"src": "1445:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1650:66:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1660:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1704:5:2"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1673:30:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:37:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1660:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1630:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1640:9:2",
														"type": ""
													}
												],
												"src": "1590:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1782:53:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1792:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1823:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1805:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:24:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1792:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1762:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1772:9:2",
														"type": ""
													}
												],
												"src": "1722:113:2"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806325be124e1461005c578063527097251461007a578063a9e9f46114610098578063d21220a7146100b6578063f400fde4146100d4575b600080fd5b6100646100f2565b60405161007191906101d6565b60405180910390f35b610082610118565b60405161008f91906101bb565b60405180910390f35b6100a061013e565b6040516100ad91906101bb565b60405180910390f35b6100be610164565b6040516100cb91906101d6565b60405180910390f35b6100dc610188565b6040516100e991906101f1565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b6101978161020c565b82525050565b6101a681610248565b82525050565b6101b58161023e565b82525050565b60006020820190506101d0600083018461018e565b92915050565b60006020820190506101eb600083018461019d565b92915050565b600060208201905061020660008301846101ac565b92915050565b60006102178261021e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006102538261025a565b9050919050565b60006102658261026c565b9050919050565b60006102778261021e565b905091905056fea26469706673582212206f5674fa9b5b033414a54323cb3a5d3b80f2ff2889d46b67c7856895fc2b811a64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x25BE124E EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x52709725 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0xA9E9F461 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xF400FDE4 EQ PUSH2 0xD4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x118 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x1BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBE PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x1D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x197 DUP2 PUSH2 0x20C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1A6 DUP2 PUSH2 0x248 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1B5 DUP2 PUSH2 0x23E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x19D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x206 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217 DUP3 PUSH2 0x21E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x253 DUP3 PUSH2 0x25A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x265 DUP3 PUSH2 0x26C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x277 DUP3 PUSH2 0x21E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0x5674FA9B5B033414A54323CB3A5D3B80 CALLCODE SELFDESTRUCT 0x28 DUP10 0xD4 PUSH12 0x67C7856895FC2B811A64736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "183:165:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;290:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;317:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;236;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;209:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;264:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;290:20;;;;;;;;;;;;;:::o;317:21::-;;;;;;;;;;;;;:::o;236:::-;;;;;;;;;;;;;:::o;209:20::-;;;;;;;;;;;;:::o;264:19::-;;;;:::o;7:118:2:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:157::-;231:50;275:5;231:50;:::i;:::-;226:3;219:63;131:157;;:::o;294:118::-;381:24;399:5;381:24;:::i;:::-;376:3;369:37;294:118;;:::o;418:222::-;511:4;549:2;538:9;534:18;526:26;;562:71;630:1;619:9;615:17;606:6;562:71;:::i;:::-;418:222;;;;:::o;646:248::-;752:4;790:2;779:9;775:18;767:26;;803:84;884:1;873:9;869:17;860:6;803:84;:::i;:::-;646:248;;;;:::o;900:222::-;993:4;1031:2;1020:9;1016:18;1008:26;;1044:71;1112:1;1101:9;1097:17;1088:6;1044:71;:::i;:::-;900:222;;;;:::o;1128:96::-;1165:7;1194:24;1212:5;1194:24;:::i;:::-;1183:35;;1128:96;;;:::o;1230:126::-;1267:7;1307:42;1300:5;1296:54;1285:65;;1230:126;;;:::o;1362:77::-;1399:7;1428:5;1417:16;;1362:77;;;:::o;1445:139::-;1508:9;1541:37;1572:5;1541:37;:::i;:::-;1528:50;;1445:139;;;:::o;1590:126::-;1640:9;1673:37;1704:5;1673:37;:::i;:::-;1660:50;;1590:126;;;:::o;1722:113::-;1772:9;1805:24;1823:5;1805:24;:::i;:::-;1792:37;;1722:113;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "138400",
								"executionCost": "183",
								"totalCost": "138583"
							},
							"external": {
								"amount1()": "2495",
								"onwer1()": "2536",
								"owner2()": "2514",
								"token1()": "2641",
								"token2()": "2578"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 348,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 183,
									"end": 348,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 183,
									"end": 348,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 183,
									"end": 348,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 183,
									"end": 348,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 183,
									"end": 348,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 183,
									"end": 348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 348,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 183,
									"end": 348,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 348,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 183,
									"end": 348,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 183,
									"end": 348,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 348,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 183,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 183,
									"end": 348,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 348,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 183,
									"end": 348,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 348,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 348,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 183,
									"end": 348,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 348,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206f5674fa9b5b033414a54323cb3a5d3b80f2ff2889d46b67c7856895fc2b811a64736f6c63430008070033",
									".code": [
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "25BE124E"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "52709725"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "A9E9F461"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "D21220A7"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "F400FDE4"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 183,
											"end": 348,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 264,
											"end": 283,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 264,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 264,
											"end": 283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 264,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 264,
											"end": 283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 264,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 264,
											"end": 283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 264,
											"end": 283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 264,
											"end": 283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 264,
											"end": 283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 264,
											"end": 283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 264,
											"end": 283,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 290,
											"end": 310,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 290,
											"end": 310,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 317,
											"end": 338,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 317,
											"end": 338,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 236,
											"end": 257,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 236,
											"end": 257,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 209,
											"end": 229,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 264,
											"end": 283,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 264,
											"end": 283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 264,
											"end": 283,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 131,
											"end": 288,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 231,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 275,
											"end": 280,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 231,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 231,
											"end": 281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 226,
											"end": 229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 219,
											"end": 282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 131,
											"end": 288,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 131,
											"end": 288,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 294,
											"end": 412,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 294,
											"end": 412,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 381,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 399,
											"end": 404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 381,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 381,
											"end": 405,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 381,
											"end": 405,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 381,
											"end": 405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 376,
											"end": 379,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 369,
											"end": 406,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 294,
											"end": 412,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 294,
											"end": 412,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 294,
											"end": 412,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 418,
											"end": 640,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 418,
											"end": 640,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 511,
											"end": 515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 551,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 547,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 534,
											"end": 552,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 526,
											"end": 552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 526,
											"end": 552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 562,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 631,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 628,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 615,
											"end": 632,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 606,
											"end": 612,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 562,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 562,
											"end": 633,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 562,
											"end": 633,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 562,
											"end": 633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 418,
											"end": 640,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 418,
											"end": 640,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 418,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 418,
											"end": 640,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 418,
											"end": 640,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 646,
											"end": 894,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 646,
											"end": 894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 752,
											"end": 756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 792,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 779,
											"end": 788,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 775,
											"end": 793,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 767,
											"end": 793,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 767,
											"end": 793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 803,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 884,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 869,
											"end": 886,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 860,
											"end": 866,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 803,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 803,
											"end": 887,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 803,
											"end": 887,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 803,
											"end": 887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 646,
											"end": 894,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 646,
											"end": 894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 646,
											"end": 894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 894,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 900,
											"end": 1122,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 900,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 993,
											"end": 997,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1020,
											"end": 1029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1110,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1097,
											"end": 1114,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1044,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1044,
											"end": 1115,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1044,
											"end": 1115,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1044,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 900,
											"end": 1122,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 900,
											"end": 1122,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 900,
											"end": 1122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 900,
											"end": 1122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 900,
											"end": 1122,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1128,
											"end": 1224,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1128,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1212,
											"end": 1217,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1194,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1194,
											"end": 1218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1194,
											"end": 1218,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1194,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1183,
											"end": 1218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1224,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1128,
											"end": 1224,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1230,
											"end": 1356,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1230,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1274,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1349,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1300,
											"end": 1305,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1296,
											"end": 1350,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1285,
											"end": 1350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1356,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1356,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1356,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1230,
											"end": 1356,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1406,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1433,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1433,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1362,
											"end": 1439,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1445,
											"end": 1584,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1445,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1572,
											"end": 1577,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1541,
											"end": 1578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1528,
											"end": 1578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1584,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1590,
											"end": 1716,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1590,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1704,
											"end": 1709,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1673,
											"end": 1710,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1673,
											"end": 1710,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1673,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1660,
											"end": 1710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1590,
											"end": 1716,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1590,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1590,
											"end": 1716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1590,
											"end": 1716,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1722,
											"end": 1835,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1722,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1772,
											"end": 1781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1823,
											"end": 1828,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1805,
											"end": 1829,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1805,
											"end": 1829,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1805,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1792,
											"end": 1829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1792,
											"end": 1829,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1835,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1722,
											"end": 1835,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"amount1()": "f400fde4",
							"onwer1()": "a9e9f461",
							"owner2()": "52709725",
							"token1()": "d21220a7",
							"token2()": "25be124e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"amount1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onwer1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token2\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"token_swap.sol\":\"TokenSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"token_swap.sol\":{\"keccak256\":\"0x96ee6ee72fc14f4438598c4cb7b5a7e16d5db5b4db9b030fd72ec1228aa7b64c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7aeb69a977a620cae62cda91d1893b96d732ae9e1ff936674dc283e5490d8da5\",\"dweb:/ipfs/QmYd2bpeXDi8BtaoUrS9TkS7LL7eWcCm7415ypf6eSuweW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "token_swap.sol:TokenSwap",
								"label": "token1",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 85,
								"contract": "token_swap.sol:TokenSwap",
								"label": "onwer1",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 87,
								"contract": "token_swap.sol:TokenSwap",
								"label": "amount1",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 90,
								"contract": "token_swap.sol:TokenSwap",
								"label": "token2",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 92,
								"contract": "token_swap.sol:TokenSwap",
								"label": "owner2",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "139:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "269:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:0"
									},
									"scope": 77,
									"src": "223:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "380:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:0"
									},
									"scope": 77,
									"src": "361:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "667:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "686:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "720:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:0"
									},
									"scope": 77,
									"src": "649:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1020:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1035:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:0"
									},
									"scope": 77,
									"src": "1001:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1754:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1771:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1805:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:0"
									},
									"scope": 77,
									"src": "1737:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2148:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2140:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2164:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2156:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2183:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2175:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:51:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2209:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2209:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:6:0"
									},
									"scope": 77,
									"src": "2118:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2221:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2390:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2415:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2399:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2437:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2421:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2449:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2441:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:57:0"
									},
									"src": "2384:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2462:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "2621:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2646:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2630:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2669:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2653:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2686:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2678:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2629:63:0"
									},
									"src": "2615:78:0"
								}
							],
							"scope": 78,
							"src": "129:2566:0",
							"usedErrors": []
						}
					],
					"src": "33:2663:0"
				},
				"id": 0
			},
			"token_swap.sol": {
				"ast": {
					"absolutePath": "token_swap.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TokenSwap": [
							93
						]
					},
					"id": 94,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:23:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.0.0/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 94,
							"sourceUnit": 78,
							"src": "66:109:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 93,
							"linearizedBaseContracts": [
								93
							],
							"name": "TokenSwap",
							"nameLocation": "192:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 83,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "223:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "209:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 82,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 81,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "209:6:1"
										},
										"referencedDeclaration": 77,
										"src": "209:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a9e9f461",
									"id": 85,
									"mutability": "mutable",
									"name": "onwer1",
									"nameLocation": "251:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "236:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 84,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "236:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f400fde4",
									"id": 87,
									"mutability": "mutable",
									"name": "amount1",
									"nameLocation": "276:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "264:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 86,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "264:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "25be124e",
									"id": 90,
									"mutability": "mutable",
									"name": "token2",
									"nameLocation": "304:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "290:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 89,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 88,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "290:6:1"
										},
										"referencedDeclaration": 77,
										"src": "290:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "52709725",
									"id": 92,
									"mutability": "mutable",
									"name": "owner2",
									"nameLocation": "332:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "317:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 91,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "317:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								}
							],
							"scope": 94,
							"src": "183:165:1",
							"usedErrors": []
						}
					],
					"src": "39:315:1"
				},
				"id": 1
			}
		}
	}
}